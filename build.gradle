plugins {
    id 'java'
}

group 'bback.module'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    jakartaVersion = '3.1.0'
    jacksonVersion = '2.13.5'
    log4jVersion = '2.20.0'
    slf4jVersion = '1.7.36'
    apacheCommonLoggingVersion = '1.2'
}

dependencies {
    // core
    compileOnly "jakarta.persistence:jakarta.persistence-api:${jakartaVersion}"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"


    // log
    compileOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compileOnly "org.slf4j:slf4j-api:${slf4jVersion}"
    compileOnly "commons-logging:commons-logging:${apacheCommonLoggingVersion}"

    // test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'com.h2database:h2:2.2.220'
    testImplementation "jakarta.persistence:jakarta.persistence-api:${jakartaVersion}"
    testImplementation 'org.hibernate:hibernate-core:6.2.9.Final'
    testImplementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"


}

test {
    compileTestJava.options.compilerArgs.add("-parameters")
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'bback.module.Main'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task("re-jar") {
    doFirst { println("clean re-jar...") }
    dependsOn clean
    dependsOn jar
    doLast { println("build re-jar...") }
}